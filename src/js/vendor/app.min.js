'use strict';

function addAudio(nomeAudio, caminhoAudio) {
  var audio = $('<audio />').prop('src', caminhoAudio).text('Seu leitor de EPUB não suporta o formato de áudio deste livro.');

  $('body').append(audio);

  $('#' + nomeAudio).click(function () {
    return audio.get(0).play();
  });
}

function addVideo(nomeVideo, caminhoVideo) {
  var container = $('#' + nomeVideo);
  var largura = container.children('img').width();
  var altura = container.children('img').height();

  container.empty();

  var video = $('<video />').prop('id', 'video' + nomeVideo).prop('src', caminhoVideo).prop('width', largura).prop('height', altura).prop('controls', true).text('Seu leitor de EPUB não suporta o formato de vídeo deste livro.');

  console.log(container, largura, altura);
  container.append(video).click(function () {
    return video.get(0).play();
  });
}

function exibirMensagem(placeholderMensagem, placeholderTexto, mensagem) {
  $(placeholderTexto).text(mensagem);
  $(placeholderMensagem).show();
}

function ocultarMensagem(placeholderMensagem) {
  $(placeholderMensagem).hide();
}

function randomSort(array) {
  var resultado = [];

  var copiaArray = array.map(function (n) {
    return n;
  });

  while (copiaArray.length) {
    resultado.push(copiaArray.splice(Math.floor(Math.random() * copiaArray.length), 1)[0]);
  }

  return resultado;
}

/**
 * Create a web friendly URL slug from a string.
 *
 * Requires XRegExp (http://xregexp.com) with unicode add-ons for UTF-8 support.
 *
 * Although supported, transliteration is discouraged because
 *     1) most web browsers support UTF-8 characters in URLs
 *     2) transliteration causes a loss of information
 *
 * @author Sean Murphy <sean@iamseanmurphy.com>
 * @copyright Copyright 2012 Sean Murphy. All rights reserved.
 * @license http://creativecommons.org/publicdomain/zero/1.0/
 *
 * @param string s
 * @param object opt
 * @return string
 */
function slug(s, opt) {
  s = String(s);
  opt = Object(opt);

  var defaults = {
    'delimiter': '-',
    'limit': undefined,
    'lowercase': true,
    'replacements': {},
    'transliterate': typeof XRegExp === 'undefined' ? true : false
  };

  // Merge options
  for (var k in defaults) {
    if (!opt.hasOwnProperty(k)) {
      opt[k] = defaults[k];
    }
  }

  var char_map = {
    // Latin
    'À': 'A', 'Á': 'A', 'Â': 'A', 'Ã': 'A', 'Ä': 'A', 'Å': 'A', 'Æ': 'AE', 'Ç': 'C',
    'È': 'E', 'É': 'E', 'Ê': 'E', 'Ë': 'E', 'Ì': 'I', 'Í': 'I', 'Î': 'I', 'Ï': 'I',
    'Ð': 'D', 'Ñ': 'N', 'Ò': 'O', 'Ó': 'O', 'Ô': 'O', 'Õ': 'O', 'Ö': 'O', 'Ő': 'O',
    'Ø': 'O', 'Ù': 'U', 'Ú': 'U', 'Û': 'U', 'Ü': 'U', 'Ű': 'U', 'Ý': 'Y', 'Þ': 'TH',
    'ß': 'ss',
    'à': 'a', 'á': 'a', 'â': 'a', 'ã': 'a', 'ä': 'a', 'å': 'a', 'æ': 'ae', 'ç': 'c',
    'è': 'e', 'é': 'e', 'ê': 'e', 'ë': 'e', 'ì': 'i', 'í': 'i', 'î': 'i', 'ï': 'i',
    'ð': 'd', 'ñ': 'n', 'ò': 'o', 'ó': 'o', 'ô': 'o', 'õ': 'o', 'ö': 'o', 'ő': 'o',
    'ø': 'o', 'ù': 'u', 'ú': 'u', 'û': 'u', 'ü': 'u', 'ű': 'u', 'ý': 'y', 'þ': 'th',
    'ÿ': 'y'
  };

  // Make custom replacements
  for (var k in opt.replacements) {
    s = s.replace(RegExp(k, 'g'), opt.replacements[k]);
  }

  // Transliterate characters to ASCII
  if (opt.transliterate) {
    for (var k in char_map) {
      s = s.replace(RegExp(k, 'g'), char_map[k]);
    }
  }

  // Replace non-alphanumeric characters with our delimiter
  var alnum = typeof XRegExp === 'undefined' ? RegExp('[^a-z0-9]+', 'ig') : XRegExp('[^\\p{L}\\p{N}]+', 'ig');
  s = s.replace(alnum, opt.delimiter);

  // Remove duplicate delimiters
  s = s.replace(RegExp('[' + opt.delimiter + ']{2,}', 'g'), opt.delimiter);

  // Truncate slug to max. characters
  s = s.substring(0, opt.limit);

  // Remove delimiter from ends
  s = s.replace(RegExp('(^' + opt.delimiter + '|' + opt.delimiter + '$)', 'g'), '');

  return opt.lowercase ? s.toLowerCase() : s;
}

function pg6() {
  var surdas = [],
      sonoras = [],
      surdasCorretas = ['cato', 'chato', 'faca', 'pato', 'selo', 'tato'],
      sonorasCorretas = ['bato', 'dado', 'gato', 'jato', 'vaca', 'zelo'],
      qtdPalavrasSelecionadas = 0;

  $(init);

  function init() {
    limparTela();
    criarPalavras();
  }

  function limparTela() {
    // $('#mensagem').hide()
    ocultarMensagem('#mensagem');
    $('#surdas').html('Surdas');
    $('#sonoras').html('Sonoras');
    $('#palavras').html('');
    qtdPalavrasSelecionadas = 0;
    surdas = [];
    sonoras = [];
  }

  function criarPalavras() {
    surdasCorretas.forEach(function (surdaCorreta, i) {
      $('<div />').prop('id', surdaCorreta).text(surdaCorreta).appendTo('#palavras');

      $('<div />').prop('id', sonorasCorretas[i]).text(sonorasCorretas[i]).appendTo('#palavras');
    });

    var palavras = $('#palavras');
    var divs = palavras.children();

    while (divs.length) {
      palavras.append(divs.splice(Math.floor(Math.random() * divs.length), 1)[0]);
    }

    $('#palavras div').draggable({
      containment: '#quadro',
      cursor: 'move',
      revert: true
    });

    surdasCorretas.forEach(function (surda, i) {
      $('<div />').data('palavra-surda', i).appendTo('#surdas').droppable({
        drop: addPalavra,
        hoverClass: 'hovered'
      });

      $('<div />').data('palavra-sonora', i).appendTo('#sonoras').droppable({
        drop: addPalavra,
        hoverClass: 'hovered'
      });
    });
  }

  function addPalavra(evento, ui) {
    var coluna = $(this).context.parentElement.id;
    if (coluna === 'surdas' && surdas.length < surdasCorretas.length) {
      surdas.push(ui.draggable.text().trim());
    } else {
      sonoras.push(ui.draggable.text().trim());
    }

    ui.draggable.draggable('option', { disabled: true, revert: false }).position({ of: $(this), my: 'left top', at: 'left top' });

    $(this).droppable({ disabled: true });

    qtdPalavrasSelecionadas++;

    verificarResposta();
  }

  function verificarResposta() {
    var respostaCorreta = false;
    if (qtdPalavrasSelecionadas === surdasCorretas.length + sonorasCorretas.length) {
      respostaCorreta = true;
      surdas.sort();
      surdasCorretas.sort();
      sonoras.sort();
      sonorasCorretas.sort();

      surdas.forEach(function (surda, i) {
        if (surda !== surdasCorretas[i]) {
          respostaCorreta = false;
          $('#' + surda).addClass('associacaoIncorreta');
        }
      });

      sonoras.forEach(function (sonora, i) {
        if (sonora !== sonorasCorretas[i]) {
          respostaCorreta = false;
          $('#' + sonora).addClass('associacaoIncorreta');
        }
      });

      var mensagem = respostaCorreta ? 'Parabéns, você acertou!' : 'Que pena! Você errou.';
      // $('#mensagem h2').text(mensagem)
      // $('#mensagem').show()
      exibirMensagem('#mensagem', '#mensagem h2', mensagem);
    }
  }
}